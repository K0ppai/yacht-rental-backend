---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/yachts":
    get:
      summary: List all yachts
      tags:
      - Yachts
      description: List all yachts
      security:
      - Bearer: {}
      responses:
        '200':
          description: List of Yachts
    post:
      summary: Create a new yacht
      tags:
      - Yachts
      parameters: []
      responses:
        '201':
          description: Expert created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                model:
                  type: string
                image:
                  type: string
                fee_per_day:
                  type: integer
              required:
              - name
              - description
              - model
              - image 
              - fee_per_day
  "/yachts/id":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show Yacht details
      tags:
      - Yachts
      description: Show Yacht details
      security:
      - Bearer: {}
      responses:
        '200':
          description: Expert details
        '404':
          description: Expert not found
    delete:
      summary: Delete a yacht
      tags:
      - Yachts
      parameters: []
      responses:
        '200':
          description: Delete successful
        '422':
          description: Delete failed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                removed:
                  type: boolean
              required:
              - removed
  "/reservations":
    get:
      summary: List all reservations
      tags:
      - Reservations
      description: List all reservations
      security:
      - Bearer: {}
      responses:
        '200':
          description: List of reservations
    post:
      summary: Create a new reservation
      tags:
      - Reservations
      parameters: []
      responses:
        '201':
          description: Reservation created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                yacht_id:
                  type: integer
                user_id:
                  type: integer
                city_id:
                  type: integer
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
              required:
              - yacht_id
              - user_id
              - city_id
              - start_date  
              - end_date
  "/reservations/id":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show reservation details
      tags:
      - Reservations
      description: Show reservation details
      security:
      - Bearer: {}
      responses:
        '200':
          description: Reservation details
        '404':
          description: Reservation not found
  "/cities":
    get:
      summary: List all cities
      tags:
      - Cities
      description: List all cities
      security:
      - Bearer: {}
      responses:
        '200':
          description: List of cities


  "/signup":
    post:
      summary: Sign up
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: User created
        '422':
          description: Invalid request
        '200':
          description: Login successful
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password

  "/login":
    get:
      summary: Login
      tags:
      - Users
      description: Login the current user.
      security:
      - Bearer: {}
      responses:
        '200':
          description: Log in successfully

  "/logout":
    delete:
      summary: Logout
      tags:
      - Users
      description: Log out the current user.
      security:
      - Bearer: {}
      responses:
        '200':
          description: Logged out successfully
    
servers:
- url: https://beta-yacht-rental.onrender.com
  variables:
    defaultHost:
      default: https://beta-yacht-rental.onrender.com